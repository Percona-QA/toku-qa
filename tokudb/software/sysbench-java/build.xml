<?xml version="1.0" ?>
<project name="generic ant script" default="default">
    <property environment="env"/>
    
    <property name="build.dir" location="obj/"/>
    <property name="src.dir" location="src/"/>
    
    <path id="project.classpath">
        <pathelement location="${build.dir}"/>
        <pathelement path="${java.class.path}"/>
    </path>
    
    <macrodef name="invoke-java">
        <attribute name="classname"/>
        <element name="javac" optional="true" implicit="true"/>
        <sequential>
            <java classname="@{classname}" fork="yes" failonerror="true">
                <jvmarg value="-server"/>
                <jvmarg value="-Xmx1024m"/>
                <jvmarg value="-Xms1024m"/>
                <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError"/>
                <jvmarg value="-XX:HeapDumpPath=/tmp"/>
                <jvmarg value="-XX:-ReduceInitialCardMarks"/>
                <classpath refid="project.classpath"/>
                <assertions>
                    <disable/>
                </assertions>
                <javac/>
            </java>
        </sequential>
    </macrodef>
    
    <target name="default" depends="srccompile" description="Compile code."/>
    
    <target name="clean" description="Remove compilation artifacts">
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="${build.dir}" includes="**/*"/>
        </delete>
    </target>
    
    <target name="srccompile">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true" target="1.7" includeantruntime="false">
            <classpath refid="project.classpath"/>
        </javac>
    </target>
    
    <target name="load" description="Run loader.">
        <fail unless="env.DB_NAME" message="DB_NAME not set."/>
        <fail unless="env.NUM_TABLES" message="NUM_TABLES not set."/>
        <fail unless="env.NUM_LOADER_THREADS" message="NUM_LOADER_THREADS not set."/>
        <fail unless="env.NUM_ROWS_PER_TABLE" message="NUM_ROWS_PER_TABLE not set."/>
        <fail unless="env.NUM_DOCUMENTS_PER_INSERT" message="NUM_DOCUMENTS_PER_INSERT not set."/>
        <fail unless="env.NUM_INSERTS_PER_FEEDBACK" message="NUM_INSERTS_PER_FEEDBACK not set."/>
        <fail unless="env.NUM_SECONDS_PER_FEEDBACK" message="NUM_SECONDS_PER_FEEDBACK not set."/>
        <fail unless="env.BENCHMARK_TSV" message="BENCHMARK_TSV not set."/>
        <fail unless="env.MYSQL_PORT" message="MYSQL_PORT not set."/>
        
        <invoke-java classname="jmongosysbenchload">
            <arg value="${env.NUM_TABLES}"/>                     <!-- number of tables -->
            <arg value="${env.DB_NAME}"/>                        <!-- database name -->
            <arg value="${env.NUM_LOADER_THREADS}"/>             <!-- number of writer threads -->
            <arg value="${env.NUM_ROWS_PER_TABLE}"/>             <!-- rows to insert per table -->
            <arg value="${env.NUM_DOCUMENTS_PER_INSERT}"/>       <!-- documents per insert (bulk loading)  -->
            <arg value="${env.NUM_INSERTS_PER_FEEDBACK}"/>       <!-- number of inserts between feedback/progress messages  -->
            <arg value="${env.NUM_SECONDS_PER_FEEDBACK}"/>       <!-- number of seconds between feedback/progress messages  -->
            <arg value="${env.BENCHMARK_TSV}"/>                  <!-- name of log file -->
            <arg value="${env.MYSQL_PORT}"/>                     <!-- mysql port -->
        </invoke-java>
    </target>

</project>
