#!/bin/bash

if [ $# -eq 0 ]; then
    echo "usage: mongo-mongod-server <tarball> <port> <cache-size>"
    exit 1
fi

# must be started in an empty directory
if [ "$(ls -A ./)" ]; then
   echo "Current directory is not empty, exiting..."
   exit 1
fi

tarball=$1
mongodPort=$2
mongodCacheSize=$3

mongodDataDir=./data-dir

SOURCE_DIR=${BACKUP_DIR}/mongodb

if [ -e ${SOURCE_DIR}/${1} ]; then
    echo "expanding ${SOURCE_DIR}/${1}"
    tar xzvf ${SOURCE_DIR}/${1} --strip 1
elif [ -e ${SOURCE_DIR}/${1}.tar.gz ]; then
    echo "expanding ${SOURCE_DIR}/${1}.tar.gz"
    tar xzvf ${SOURCE_DIR}/${1}.tar.gz --strip 1
elif [ -e ${SOURCE_DIR}/${1}.tgz ]; then
    echo "expanding ${SOURCE_DIR}/${1}.tgz"
    tar xzvf ${SOURCE_DIR}/${1}.tgz --strip 1
elif [ -e ${SOURCE_DIR}/${1}.tar ]; then
    echo "expanding ${SOURCE_DIR}/${1}.tar"
    tar xvf ${SOURCE_DIR}/${1}.tar --strip 1
else
    echo "ERROR: unable to locate ${SOURCE_DIR}/${1} in .tar, .tar.gz, or .tgz format"
    exit 1
fi

mkdir ${mongodDataDir}

if [ -z "$COMMIT_SYNC" ]; then
    export COMMIT_SYNC=1
fi

if [ ${COMMIT_SYNC} == "1" ]; then
    NOSYNC_COMMIT=""
else
    NOSYNC_COMMIT="--nosync_commit"
fi

if [ -z "$MONGO_REPL" ]; then
    REPL_STRING=""
else
    REPL_STRING="--replSet ${MONGO_REPL}"
fi

if [ -z "$MONGO_LOCK_TIMEOUT" ]; then
    LOCK_TIMEOUT_STRING=""
else
    LOCK_TIMEOUT_STRING="--lockTimeout ${MONGO_LOCK_TIMEOUT}"
fi

export MONGO_SLOW_MS=500

if [ -z "$MONGO_SLOW_MS" ]; then
    SLOWMS_STRING=""
else
    SLOWMS_STRING="--slowms ${MONGO_SLOW_MS}"
fi

./bin/mongod --dbpath ${mongodDataDir} --port ${mongodPort} ${NOSYNC_COMMIT} --directio --cacheSize ${mongodCacheSize} ${REPL_STRING} ${LOCK_TIMEOUT_STRING} ${SLOWMS_STRING}
