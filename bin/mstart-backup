#! /bin/bash

if [ $# -eq 0 ]; then
  echo "usage: mstart-backup <datadir> [<my.cnf file>]"
  exit 1
fi

if [ -z "${MYSQL_SOCKET}" ]; then
    echo "Need to set MYSQL_SOCKET"
    exit 1
fi
if [ -z "${MYSQL_PORT}" ]; then
    echo "Need to set MYSQL_PORT"
    exit 1
fi

MALLOC_LIBRARY=""
# if jemalloc exists, use it!
if [ -e $PWD/lib/mysql/libjemalloc.so ]; then
    echo "found lib/mysql/libjemalloc.so, providing it to mysqld_safe"
    MALLOC_LIBRARY=--malloc-lib=$PWD/lib/mysql/libjemalloc.so
fi

# if libHotBackup.so exists, preload it!
if [ -e $PWD/lib/mysql/libHotBackup.so ]; then
    echo "found lib/mysql/libHotBackup.so, adding to LD_PRELOAD"
    export LD_PRELOAD=$PWD/lib/mysql/libHotBackup.so:$LD_PRELOAD
fi

# rename existing *.err files
for fname in ${1}/*.err ; do
    echo "renaming existing eror log: ${fname} to ${fname}.ORIGINAL"
    mv ${fname} ${fname}.ORIGINAL
done

if [ -f my.cnf ]; then
    bin/mysqld_safe --defaults-file=my.cnf --basedir=$PWD --core-file --core-file-size=unlimited --socket=${MYSQL_SOCKET} --port=${MYSQL_PORT} --datadir=$1 ${MALLOC_LIBRARY} &
elif [ $# -eq 2 ]; then
    bin/mysqld_safe --defaults-file=$2 --basedir=$PWD --core-file --core-file-size=unlimited --socket=${MYSQL_SOCKET} --port=${MYSQL_PORT} --datadir=$1 ${MALLOC_LIBRARY} &
else
    echo "my.cnf must be in the current directory or you must supply the full name/path!!!"
    exit
fi

echo "waiting for mysql to start..."
sleep 2
while ! [ -S "${MYSQL_SOCKET}" ]; do
    sleep 2
done
bin/mysql --user=root --socket=${MYSQL_SOCKET} -e "show engines;" | grep TokuDB > /dev/null 2>&1
if [ "$?" -eq "0" ]; then
    printf "\nTokuDB engine loaded.\n\n"
else
    printf "\nTokuDB engine IS NOT loaded.\n\n"
fi    

grep -i error ${1}/*.err

if [ $? -ne 1 ] ; then
    echo "found error(s) in the log, hit any key to continue"
    read -n 1 -s
fi

grep -i warning ${1}/*.err

if [ $? -ne 1 ] ; then
    echo "found warning(s) in the log, hit any key to continue"
    read -n 1 -s
fi
