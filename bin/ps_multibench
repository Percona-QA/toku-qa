#!/bin/bash
# iibench performance benchmark script for innodd and tokudb
export SCRIPT_DIR=$(cd $(dirname $0) && pwd)
export dirIibench=$SCRIPT_DIR/../tokudb/software/iibench
dirSysbench=$SCRIPT_DIR/../tokudb/software/sysbench
dirTpcc=$SCRIPT_DIR/../tokudb/software/tpcc-percona
dirFbPileup=$SCRIPT_DIR/../tokudb/software/sysbench/fb-pileup

# **********************************************************************************************
# generic variables
# **********************************************************************************************
export MYSQL_NAME=percona
export MYSQL_VERSION=5.6.23
export MYSQL_STORAGE_ENGINE=tokudb
export SCP_FILES=Y
export DIRECTIO=Y
export PATH=$PATH:$SCRIPT_DIR
# change the machine.config values as per your configuration 
source $SCRIPT_DIR/machine.config

# Check if workdir was set by Jenkins, otherwise this is presumably a local run
if [ ! -z ${WORKDIR} ]; then
  export BIG_DIR=${WORKDIR}
  mkdir -p ${BIG_DIR}/backups
  SCP_TARGET=${BIG_DIR}/backups
fi

# Check if workspace was set by Jenkins, otherwise this is presumably a local run
if [ -z $WORKSPACE ]; then
  echo "Assuming this is a local (i.e. non-Jenkins initiated) run."
  export WORKSPACE=$BIG_DIR/backups
fi

export WORKSPACE_LOG=$BIG_DIR/backups

# make sure we have passed basedir parameter for this benchmark run
if [ -z $2 ]; then
  echo "No valid parameter passed.  Need relative workdir (1st option) and relative basedir (2nd option) settings. Retry."
  echo "Usage example:"
  echo "$./ps.multibench 10 Percona-Server-5.5.28-rel29.3-435.Linux.x86_64"
  echo "This would lead to $BIG_DIR/100 being created, in which testing takes place and"
  echo "$BIG_DIR/$1/Percona-Server-5.5.28-rel29.3-435.Linux.x86_64 would be used to test."
  exit 1
else
  mkdir -p $BIG_DIR/$1
  cp -r $BIG_DIR/$2 $BIG_DIR/$1
  export BUILD_NUMBER=$1
  export DB_DIR=$BIG_DIR/$1/$2
fi
# use semi-colon list of "blank-tarball;id"
#benchmarkList=""
#benchmarkList="${benchmarkList} $BASEDIR;721"
#benchmarkList="${benchmarkList} blank-toku755rc1.e-mysql-5.5.41;755erc1"

#for thisBenchmark in ${benchmarkList}; do
#export MINI_BENCH_ID=$(echo "${thisBenchmark}" | cut -d';' -f2)

# ************************************************
# BE VERY CAREFUL TO SET STUFF AFTER THE FOLLOWING
# ************************************************

export INNODB_CACHE=8G
export TOKUDB_DIRECTIO_CACHE=8G

# **********************************************************************************************
# iibench
# **********************************************************************************************
export INNODB_CACHE=8G
export TOKUDB_DIRECTIO_CACHE=8G
export ADDITIONAL_WRITERS=0
export MAX_ROWS=100000000
export ROWS_PER_REPORT=20000000
export RUN_MINUTES=1200
export UNIQUE_CHECKS=1
if [ "$MYSQL_STORAGE_ENGINE" == "innodb" ];then
  export BENCH_ID=innodb
else
  export BENCH_ID=quicklz
fi
export INSERT_ONLY=1
export BENCHMARK_NUMBER=001
export SHUTDOWN_MYSQL=N
export IIBENCH_CREATE_TABLE=Y
pushd ${dirIibench}
./ps.run.benchmark.sh
popd
unset SHUTDOWN_MYSQL
unset IIBENCH_CREATE_TABLE
    
    # 4 concurrent inserters
#    export INNODB_CACHE=8G
#    export TOKUDB_DIRECTIO_CACHE=8G
#    export ADDITIONAL_WRITERS=3
#    export RUN_MINUTES=15
#    export BENCH_ID=quicklz.4writers
#    export BENCHMARK_NUMBER=002
#    export SKIP_DB_CREATE=Y
#    export SHUTDOWN_MYSQL=N
#    export IIBENCH_CREATE_TABLE=N
#    pushd ${dirIibench}
#    bash -x ./ps.run.benchmark.sh
#    popd
#    unset SKIP_DB_CREATE
#    unset SHUTDOWN_MYSQL
#    unset IIBENCH_CREATE_TABLE
    
    
    # **********************************************************************************************
    # iibench plus queries
    # **********************************************************************************************
export INNODB_CACHE=8G
export TOKUDB_DIRECTIO_CACHE=8G
export ADDITIONAL_WRITERS=0
export MAX_ROWS=100000000
export ROWS_PER_REPORT=20000000
export RUN_MINUTES=1200
export IIBENCH_MODE=QPS
export UNIQUE_CHECKS=1
if [ "$MYSQL_STORAGE_ENGINE" == "innodb" ];then
  export BENCH_ID=innodb.qps
else
  export BENCH_ID=quicklz.qps
fi
export INSERT_ONLY=0
export BENCHMARK_NUMBER=003
export SKIP_DB_CREATE=Y
export IIBENCH_CREATE_TABLE=N
   
pushd ${dirIibench}
./ps.run.benchmark.sh
popd
unset SKIP_DB_CREATE
unset IIBENCH_CREATE_TABLE
unset IIBENCH_MODE

    # **********************************************************************************************
    # sysbench
    # **********************************************************************************************
export INNODB_CACHE=8G
export TOKUDB_DIRECTIO_CACHE=8G
export TOKUDB_COMPRESSION=lzma
export NUM_TABLES=16
export RUN_TIME_SECONDS=300
export RAND_TYPE=uniform
if [ "$MYSQL_STORAGE_ENGINE" == "innodb" ];then
  export BENCH_ID=innodb.10mm.${RAND_TYPE}
else
  export BENCH_ID=${TOKUDB_COMPRESSION}.10mm.${RAND_TYPE}
fi
export NUM_ROWS=1000000
export TOKUDB_READ_BLOCK_SIZE=64K
export BENCHMARK_NUMBER=004
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"
    
    # > RAM - uniform - lzma
pushd ${dirSysbench}
./ps.doit.bash
popd
unset threadCountList
   
#export SKIP_DB_CREATE=Y
export RAND_TYPE=special
if [ "$MYSQL_STORAGE_ENGINE" == "innodb" ];then
  export BENCH_ID=innodb.10mm.${RAND_TYPE}
else
  export BENCH_ID=${TOKUDB_COMPRESSION}.10mm.${RAND_TYPE}
fi
export BENCHMARK_NUMBER=005
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"
    
    # > RAM - special - lzma
pushd ${dirSysbench}
./ps.doit.bash
popd
unset threadCountList
#unset SKIP_DB_CREATE

    
export INNODB_CACHE=8G
export TOKUDB_DIRECTIO_CACHE=8G
export TOKUDB_COMPRESSION=quicklz
export NUM_ROWS=1000000
export RAND_TYPE=uniform
if [ "$MYSQL_STORAGE_ENGINE" == "innodb" ];then
  export BENCH_ID=innodb.1mm.${RAND_TYPE}
else
  export BENCH_ID=${TOKUDB_COMPRESSION}.1mm.${RAND_TYPE}
fi
export BENCHMARK_NUMBER=006
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"
    
    # < RAM
pushd ${dirSysbench}
./ps.doit.bash
popd
unset threadCountList
    

    # **********************************************************************************************
    # FB-Pileup
    # **********************************************************************************************
export INNODB_CACHE=16G
export TOKUDB_DIRECTIO_CACHE=16G
export TOKUDB_COMPRESSION=quicklz
if [ "$MYSQL_STORAGE_ENGINE" == "innodb" ];then
  export BENCH_ID=innodb.4mm
else
  export BENCH_ID=${TOKUDB_COMPRESSION}.4mm
fi
export NUM_ROWS=250000
export NUM_TABLES=16
export RUN_TIME_SECONDS=180
export RAND_TYPE=uniform
export TOKUDB_READ_BLOCK_SIZE=64K
export BENCHMARK_NUMBER=007
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"
    
    # < RAM
pushd ${dirFbPileup}
./ps.doit.bash
popd
unset threadCountList
  
    
    # **********************************************************************************************
    # tpcc
    # **********************************************************************************************
export INNODB_CACHE=16G
export TOKUDB_DIRECTIO_CACHE=16G
export NUM_WAREHOUSES=500
export RUN_TIME_SECONDS=300
export NEW_ORDERS_PER_TEN_SECONDS=200000
export TOKUDB_COMPRESSION=quicklz
export TOKUDB_READ_BLOCK_SIZE=64K
if [ "$MYSQL_STORAGE_ENGINE" == "innodb" ];then
  export BENCH_ID=innodb.${NUM_WAREHOUSES}w
else
  export BENCH_ID=${TOKUDB_COMPRESSION}.${NUM_WAREHOUSES}w
fi
export BENCHMARK_NUMBER=008
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"
   
    # > RAM
pushd ${dirTpcc}
bash -x ./ps.doit.bash
popd
unset threadCountList

export INNODB_CACHE=16G
export TOKUDB_DIRECTIO_CACHE=16G
export NUM_WAREHOUSES=100
if [ "$MYSQL_STORAGE_ENGINE" == "innodb" ];then
  export BENCH_ID=innodb.${NUM_WAREHOUSES}w
else
  export BENCH_ID=${TOKUDB_COMPRESSION}.${NUM_WAREHOUSES}w
fi
export BENCHMARK_NUMBER=009
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"
    
    # < RAM
pushd ${dirTpcc}
bash -x ./ps.doit.bash
popd
unset threadCountList    
#'
    #Generate graph
PS_VERSION=`$DB_DIR/bin/mysqld --version | cut -d' ' -f2-`
UPTIME_HOUR=`uptime -p`
SYSTEM_LOAD=`uptime | sed 's|  | |g' | sed -e 's|.*user*.,|System|'`
MEM=`free -g | grep "Mem:" | awk '{print "Total:"$2"GB  Used:"$3"GB  Free:"$4"GB" }'`
if [ ! -f $WORKSPACE/hw.info ];then
  RELEASE=`cat /etc/redhat-release`
  KERNEL=`uname -r`
  echo "HW info | $RELEASE $KERNEL"  > $WORKSPACE/hw.info
fi
echo "Build #$BUILD_NUMBER | `date +'%d-%m-%Y | %H:%M'` | $PS_VERSION | $UPTIME_HOUR | $SYSTEM_LOAD | Memory: $MEM " >> $WORKSPACE/build_info.log
$SCRIPT_DIR/../graph_template/ps_multibench_html_gen.sh    

