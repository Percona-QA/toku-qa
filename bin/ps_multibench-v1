#!/bin/bash
# Percona Server performance benchmark script with multiple storage engines
export SCRIPT_DIR=$(cd $(dirname $0) && pwd)
export dirIibench=$SCRIPT_DIR/../tokudb/software/iibench
dirSysbench=$SCRIPT_DIR/../tokudb/software/sysbench
dirTpcc=$SCRIPT_DIR/../tokudb/software/tpcc-percona
dirFbPileup=$SCRIPT_DIR/../tokudb/software/sysbench/fb-pileup

# **********************************************************************************************
# generic variables
# **********************************************************************************************
export MYSQL_NAME=percona
export MYSQL_VERSION=5.7.20
export MYSQL_STORAGE_ENGINE=innodb
export SCP_FILES=Y
export DIRECTIO=Y
export PATH=$PATH:$SCRIPT_DIR
export PS_MODE=0
# change the machine.config values as per your configuration 
source $SCRIPT_DIR/machine.config
# Check if workdir was set by Jenkins, otherwise this is presumably a local run
if [ ! -z ${WORKDIR} ]; then
  export BIG_DIR=${WORKDIR}
fi

if [ ! -d ${BIG_DIR}/backups ]; then
  mkdir -p ${BIG_DIR}/backups
  SCP_TARGET=${BIG_DIR}/backups
else
  SCP_TARGET=${BIG_DIR}/backups
fi

#Check if MYEXTRA was set by Jenkins, otherwise this is presumably a local run
if [ ! -z ${MYEXTRA} ]; then
  export MYEXTRA=${MYEXTRA}
else
  export MYEXTRA=""
fi

if [[ "$MYSQL_STORAGE_ENGINE" == "rocksdb" ]];then
 MYEXTRA="--defaults-file=$SCRIPT_DIR/my_rocks.cnf $MYEXTRA"
else
 MYEXTRA="--defaults-file=$SCRIPT_DIR/my_inno.cnf $MYEXTRA"
fi

if [ -z $WORKSPACE ]; then
  echo "Assuming this is a local (i.e. non-Jenkins initiated) run."
  export WORKSPACE=$BIG_DIR/backups
fi

export WORKSPACE_LOC=$BIG_DIR/backups

# make sure we have passed basedir parameter for this benchmark run
if [ -z $2 ]; then
  echo "No valid parameter passed.  Need relative workdir (1st option) and relative basedir (2nd option) settings. Retry."
  echo "Usage example:"
  echo "$./ps.multibench 10 Percona-Server-5.5.28-rel29.3-435.Linux.x86_64"
  echo "This would lead to $BIG_DIR/100 being created, in which testing takes place and"
  echo "$BIG_DIR/$1/Percona-Server-5.5.28-rel29.3-435.Linux.x86_64 would be used to test."
  exit 1
else
  mkdir -p $BIG_DIR/$1
  cp -r $BIG_DIR/$2 $BIG_DIR/$1
  export BUILD_NUMBER=$1
  export DB_DIR=$BIG_DIR/$1/$2
fi
export MYSQL_SOCKET=/tmp/ps-perf-mysql.sock

# ************************************************
# BE VERY CAREFUL TO SET STUFF AFTER THE FOLLOWING
# ************************************************

# **********************************************************************************************
# iibench
# **********************************************************************************************
export BENCH_SUITE=iibench
export INNODB_CACHE=8G
export TOKUDB_DIRECTIO_CACHE=8G
export ROCKSDB_CACHE=8G
export ADDITIONAL_WRITERS=0
export MAX_ROWS=1000000
export ROWS_PER_REPORT=200000
export RUN_MINUTES=1200
export UNIQUE_CHECKS=1
export BENCH_ID=${MYSQL_STORAGE_ENGINE}
export INSERT_ONLY=1
export BENCHMARK_NUMBER=001
export SHUTDOWN_MYSQL=N
export IIBENCH_CREATE_TABLE=Y
pushd ${dirIibench}
./ps.run.benchmark-v1.sh
popd
unset SHUTDOWN_MYSQL
unset IIBENCH_CREATE_TABLE
    
# **********************************************************************************************
# iibench plus queries
# **********************************************************************************************

export BENCH_SUITE=iibench
export INNODB_CACHE=8G
export TOKUDB_DIRECTIO_CACHE=8G
export ROCKSDB_CACHE=8G
export ADDITIONAL_WRITERS=0
export MAX_ROWS=1000000
export ROWS_PER_REPORT=200000
export RUN_MINUTES=1200
export IIBENCH_MODE=QPS
export UNIQUE_CHECKS=1
export BENCH_ID=${MYSQL_STORAGE_ENGINE}.qps
export INSERT_ONLY=0
export BENCHMARK_NUMBER=002
export SKIP_DB_CREATE=Y
export IIBENCH_CREATE_TABLE=N
   
pushd ${dirIibench}
./ps.run.benchmark-v1.sh
popd
unset SKIP_DB_CREATE
unset IIBENCH_CREATE_TABLE
unset IIBENCH_MODE


# **********************************************************************************************
# sysbench
# **********************************************************************************************
# CPU bound performance run
export BENCH_SUITE=sysbench
export INNODB_CACHE=25G
export TOKUDB_DIRECTIO_CACHE=25G
export ROCKSDB_CACHE=25G
export NUM_TABLES=16
export RUN_TIME_SECONDS=300
export RAND_TYPE=uniform
export BENCH_ID=${MYSQL_STORAGE_ENGINE}.5mm.${RAND_TYPE}.cpubound
export NUM_ROWS=5000000
export BENCH_SIZE=5M
export BENCHMARK_NUMBER=003
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"
    
pushd ${dirSysbench}
./ps.doit-v1.bash
popd
unset threadCountList

# IO bound performance run
export BENCH_SUITE=sysbench
export INNODB_CACHE=15G
export TOKUDB_DIRECTIO_CACHE=15G
export ROCKSDB_CACHE=15G
export NUM_TABLES=16
export RUN_TIME_SECONDS=300
export RAND_TYPE=uniform
export BENCH_ID=${MYSQL_STORAGE_ENGINE}.5mm.${RAND_TYPE}.iobound
export NUM_ROWS=5000000
export BENCH_SIZE=5M
export BENCHMARK_NUMBER=004
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"

pushd ${dirSysbench}
./ps.doit-v1.bash
popd
unset threadCountList

# IO bound performance run
export BENCH_SUITE=sysbench   
export INNODB_CACHE=3G
export TOKUDB_DIRECTIO_CACHE=3G
export ROCKSDB_CACHE=3G
export NUM_TABLES=16
export RUN_TIME_SECONDS=300
export NUM_ROWS=1000000
export BENCH_SIZE=1M
export RAND_TYPE=uniform
export BENCH_ID=${MYSQL_STORAGE_ENGINE}-1mm.${RAND_TYPE}.iobound
export BENCHMARK_NUMBER=006
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"
    
    # < RAM
pushd ${dirSysbench}
./ps.doit-v1.bash
popd
unset threadCountList

# CPU bound performance run
export BENCH_SUITE=sysbench
export INNODB_CACHE=5G
export TOKUDB_DIRECTIO_CACHE=5G
export ROCKSDB_CACHE=5G
export NUM_ROWS=1000000
export BENCH_SIZE=1M
export RAND_TYPE=uniform
export BENCH_ID=${MYSQL_STORAGE_ENGINE}-1mm.${RAND_TYPE}.cpubound
export BENCHMARK_NUMBER=007
export threadCountList="0001 0004 0016 0064 0128 0256 0512 1024"

    # < RAM
pushd ${dirSysbench}
./ps.doit-v1.bash
popd
unset threadCountList
    
    #Generate graph
VERSION_INFO=`$DB_DIR/bin/mysqld --version | cut -d' ' -f2-`
UPTIME_HOUR=`uptime -p`
SYSTEM_LOAD=`uptime | sed 's|  | |g' | sed -e 's|.*user*.,|System|'`
MEM=`free -g | grep "Mem:" | awk '{print "Total:"$2"GB  Used:"$3"GB  Free:"$4"GB" }'`
if [ ! -f $WORKSPACE/hw.info ];then
  RELEASE=`cat /etc/redhat-release`
  KERNEL=`uname -r`
  echo "HW info | $RELEASE $KERNEL"  > $WORKSPACE/hw.info
fi
echo "Build #$BUILD_NUMBER | `date +'%d-%m-%Y | %H:%M'` | $VERSION_INFO | $UPTIME_HOUR | $SYSTEM_LOAD | Memory: $MEM " >> $WORKSPACE/build_info.log
$SCRIPT_DIR/../graph_template/ps_multibench_html_gen.sh    

